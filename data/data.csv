Submission Title,Submission Url,Plain Description,Video,Website,File Url,Desired Prizes,Mlh Points,Mlh Hardware Lab,Submitter Screen Name,Team Member 1 Screen Name,...
Pure Life Reddit Game,http://hackrpi2016.devpost.com/submissions/61651-pure-life-reddit-game,"The world's first MMO Dungeon Crawler powered by reddit comments! Built for HackRPI 2016. Great for groups of 4-10 people. Play with friends or strangers!

You can play by commenting inside one of the game threads.

Games are broken down into turns, which are further broken down into moves. A move is a single command written in a comment, and a turn is the point in time where all of the currently unused moves are processed and affect the game.

Valid commands are:

wait

move left

move right

move up

move down

attack left

attack right

attack up

attack down

To help add to the fun, your moves are temporarily hidden from other players until the turn is over.

Source here:
https://github.com/JacobLaurendeau/PureLifeGameForReddit
Game here:
https://www.reddit.com/r/purelife/
",,https://github.com/JacobLaurendeau/PureLifeGameForReddit,,"Best Web Hack, Best Video Game or Virtual Reality Hack",Rensselaer Polytechnic Institute,"",JacobLaurendeau,siviyn
Commerce Reality,http://hackrpi2016.devpost.com/submissions/61657-commerce-reality,"INSPIRATION
Many of the things we shop for don't require that we think about them in the context of where we will use them. When you are shopping for a new laptop or a phone, you may care about the hardware specifications of the device relative to its competition; you might even care if it has a glossy metallic finish instead of a less attractive plastic shell. You likely *won't* care if it looks good sitting on the kitchen table or worry if it will fit in your backpack. 
Many of the things we shop for do have this problem though, and they're often the things that give us the biggest headaches. Have you ever gone furniture shopping and struggled to visualize how well a particular couch will fit into your living room? Even with a good tape measure, it can be challenging to form a mental picture of how *well* it will fit. Most couches have odd angles and protrusions that can affect perceived size. It might leave less room for walking than you previously imagined. What about TVs? Would the 65 inch TV that you really want look just completely overbearing? What about a 40 inch? Is it too small? The goal of Commerce-Reality is to allow you to more easily answer those questions within the context of your own space.

WHAT IT DOES
Commerce reality is a virtual/augmented reality app for online shopping. It allows you to browse for merchandise in an online store, and then project those items into your home in fule scale. This allows you to see if that couch you were looking at really does fit along that wall in your living room, or if it sticks out just a little too much.
With this app you can look through the online store, and view the items directly, or tag them so you can view them later.

HOW WE BUILT IT

CHALLENGES WE RAN INTO
One of the primary challenges faced in this project was handling the backend data. The effort required to build the database, parse it into custom data structures, and populating the gui comprised the vast majority of our time and resources. Some problems were platform specific. The Hololens filesystem isn't directly accessible to the developer, so we had to jump through a number of hoops simply to get our database file onto the device and readable.

ACCOMPLISHMENTS THAT WE'RE PROUD OF

WHAT WE LEARNED

WHAT'S NEXT
Ultimately, this app will depend on an online web store to supply

BUILT WITH
This application was built using Unity-3D and the Microsoft Hololens toolkit for Visual Studio.
",,,,"Most Polished Hack, Best Video Game or Virtual Reality Hack, Most in the Public Interest, Most Technically Impressive","Needham High School, Utica College, Binghamton University, RPI","",JhaAman,ericscagnelli,lachas2,mameade
RA Watson,http://hackrpi2016.devpost.com/submissions/61667-ra-watson,"TODO: a description
",,http://github.com/JohnBehnke/RA-Watson,,"Best Web Hack, Most Polished Hack, Best Mobile Hack, Most in the Public Interest, Most Technically Impressive",Rensselaer Polytechnic Institute,"",justetz,JohnBehnke
DeepRes,http://hackrpi2016.devpost.com/submissions/61715-deepres,"Inspiration

I started out by watching a simple video before starting the hackathon, I realized how low-res it was... Then my mission started. Also recently I've been looking at other deep learning models on Github, which inspired me to create this AI prediction software with Deep learning. As a high-schooler this project was one of my best projects and I'm proud of it.

What it does (SIMPLE)

Takes Low res video video, outputs High-Res video

How I built it

I first started out with the idea of sub-pixel convolutional nets. I used Theano as my deep learning framework, and existing scientific python libraries for the machine learning algorithms. The way the program upscaled a LR image is through sub pixel convolution nets with fractional stride of 1 in the LR space. Which I found out can be naively implemented by interpolation, perforate or un-pooling from LR space to HR space followed by a convolution with a stride of 1 in HR space. These implementations increase the computational cost by a factor of r2, since convolution happens in HR space.So Given a training set consisting of HR image examples
IHR,n = 1...N, we generate the corresponding LR n images ILR , n = 1 . . . N , and calculate the pixel-wise mean. Then it is able that the implementation of the above periodic shuffling can be very fast compared to reduction or convolution in HR space because each operation is independent and is parallelizable in one cycle. Which then allowed the layer to operate log2r2 times faster compared to deconvolution layer in the forward pass. For the training dataset I used the OpenImages Dataset( https://github.com/openimages/dataset)  and used this script to resize them(https://github.com/ejlb/google-open-image-download) and got an okay~ model(Trained in a very short time because of the hackathon!!!!!)  After getting a model to use I implemented the sub-pixel convolutional nets, the Network layers, and made a few tweaks to the Training methods. After this I used two libraries installed with home-brew called FFmpeg and Libav for the video processing, which converted the video to individual frames(FFmpeg) for the model to pass, and then re-structured the frames in a mp4 format(Libav.)

Challenges I ran into The challenges I ran into very SEVERE

0.5. Tried to run regular convolutional nets, but figured out that it only worked on images..... 


Tried using caffe, which messed up my computer because I was trying to use python bindings


2.Fmpeg was extremely hard to setup

3.Super-resolution model underperformed, had to re-train


Tried to reconstruct frames to video with FFmpeg but completely failed :(


5.Had to set up subprocess scripts to get around the FFmpeg python bindings

Accomplishments that I'm proud of

1.Finished this project in a record time!

2.Works:)

3.Didn't give up after FFmpeg completely failed

4.Could write a scientific paper on this

What I learned

1.I learned a lot about deep learning, and especially how to pre-train models using perceptual loss

2.How to run subprocess scripts

3.How to implement sub-pixel nets


More in general about moviepy 


What's next for DeepRes


Have to include python bindings for libav, and replace ffmpeg with it
Have to add everything into one script
Have to write a paper on it


4.Have to train the model for much longer!
",https://www.youtube.com/watch?v=-H7Oba1H00s,https://github.com/Aneeshers/DeepRes,,"Best Solo Hack, Best Media Hack, Most Polished Hack, Best Data Science Hack, Most in the Public Interest, Best High School Hack, Most Technically Impressive",Guillderland Highschool,"",Aneeshers
Click To Game,http://hackrpi2016.devpost.com/submissions/61719-click-to-game,"Press any button to invert the gravity.

Collect the blue squares

Avoid the red squares.

I learned a lot about twitch game design including juicing and one button control schemes. This is the first time I've made a game like this.
",,https://keyboardkommander.itch.io/clicktogame,,"Best Solo Hack, Best Web Hack, Most Polished Hack, Best Video Game or Virtual Reality Hack",RPI,"",willpheloung
AlcoCalc,http://hackrpi2016.devpost.com/submissions/61819-alcocalc,"Inspiration

Every year 88,000 people die from alcoholism, these were deaths were mainly caused by people over-drinking in short periods of time and as a result the alcohol damaged their bodies which led to many tragic accidents and deaths.

What it does

The AlcoCalc App is an android app that takes the each user's height, weight, and gender along with the amount of time the user was drinking along with the type of alcohol that was consumed. The data then undergoes a serious of calculations to determine the person's BAC level. Once the BAC level is calculated, it undergoes a serious of conditions to determine the potential side effects of drinking. For example: if the BAC levels are low then the status is displayed as normal. However, if the levels are too high, the app will immediately make a call to emergency services.

How I built it

I built this app using Java and Android Studio. The Uber API along with its app package was also used so if the user is intoxicated, they can call an Uber to get request a ride so they can prevent themselves from driving under the influence.

Challenges I ran into

Using the phone protocol so the android app can make a direct phone call and using the Uber API along with its package so the app can be launched when the user is intoxicated. 

Accomplishments that I'm proud of

The app is fully functional!

What I learned

I learned how to connect apps with other apps and with basic cellular functions so the features can be enhanced. 

What's next for AlcoCalc

I am hoping that after users create their own accounts with the app, I can use databases to store and keep track of their BAC levels overtime.
",,https://github.com/rogerramesh/AlcoCalc,,"Best Food Related Hack, Best Mobile Hack, Best High School Hack",Needham High School,"",rramesh007
sharp-machine,http://hackrpi2016.devpost.com/submissions/61832-sharp-machine,"This is our HackRPI 2016 Project, The Sharp Machine.

Samad Farooqui and Ashwin Krishna worked on the front end with a focus on HTML5, CSS, Bootstrap, and JavaScript, 
while Saswat Bhattacharya and Toshi Piazza will worked on the machine learning part using Pyhton and set up a server as well.

The point of this website is for people to be able to use machine learning easily, with a goal of having no previous knowledge of machine learning. The user can input their data, select an algorithm to use to process that data, and see the results of their data. 
",,https://github.com/SaswatB/sharp-machine,,"Amazon Web Services - Best Use of AWS, Best Web Hack, Best Data Science Hack, Most in the Public Interest, Most Technically Impressive","Rensselaer Polytechnic Institute, Rutgers Univsersity","",faroos3,Dsotmman,saswatb,ZennHaed
WarehouseTech,http://hackrpi2016.devpost.com/submissions/61908-warehousetech,"WarehouseTech

WarehouseTech enables peoples of various skill-levels and financial profiles to closely monitor the state of their
warehouse, inventory, or business with extreme ease.

This web application allow users to keep their inventory list backed up in the cloud and safe from physical disasters. It also provides a quick and convenient means to manage your businesses anywhere in the world!
",,https://github.com/KyleSuero/RPIHacks16,,"Best Project With .tech Domain, Amazon Web Services - Best Use of AWS, Best Web Hack, Most Polished Hack, Best Data Science Hack, Most Technically Impressive",Rochester Institute of Technology,"",yogert96,orensxhagolli,kingkylest,Hongbo-Miao
Destino,http://hackrpi2016.devpost.com/submissions/61998-destino,"About

This is Destino. It will create a new Universe for every location it is given. The planets are created using google places data. Everything on screen besides the sun can be interacted with. Every star in the background is a new location for you to discover.

NOTE

This may not work correctly on google chrome. Works best on firefox for now due to SSL errors.
",,http://www.destino.tech,,"Best Project With .tech Domain, Best Solo Hack, Best Web Hack, Most Polished Hack, Best Domain Name from Domain.com, Best Data Science Hack",Rensselaer Polytechnic Institute,"",robinc7
Are You Kidding Me? I Was Just There For A Minute!,http://hackrpi2016.devpost.com/submissions/62017-are-you-kidding-me-i-was-just-there-for-a-minute,"Are you kidding me? I was just there for a minute!

This project will track parking tickets in Boston and look for areas where large amounts of tickets are issued.

Goals of the project:


[ ] Allow residents to have a resource in fighting against possible undue tickets
[ ] Allow residents to see high-risk areas easily and take necessary precautions


Intended features


[ ] Heatmap of areas by volume of tickets
[ ] Extendability to other cities by supplying a json file of that city's data

",,https://github.com/syo/AYKMIWJTFAM,,"Best Web Hack, Funniest Hack, Best Data Science Hack, Most in the Public Interest",RPI,"",LordConnor,IaquintoJoe
foodforever.tech,http://hackrpi2016.devpost.com/submissions/62076-foodforever-tech,"foodforever.tech aims to to reduce food waste by encouraging you to use your ingredients that are going to expire soon and keep track of them all in one place.
",,https://github.com/EpiChlo/foodforever/,,"Best Project With .tech Domain, Best Solo Hack, Best Web Hack, Best Food Related Hack, Most in the Public Interest",Bryson McIver,"",brysonmciver
Rate my course,http://hackrpi2016.devpost.com/submissions/62114-rate-my-course,"Inspiration

Every semester, there are 20% students regretting about choosing course that do not fit them because the description of the course on the school's official websites are not helpful.

What it does

Give a more specific description about a course, such as engagement and difficulty. What's more, we also provide the feedback from the students who have took these course before.

How I built it

We built it with the framework Express from Node.js and MongoDB as our database. As for the design schema, we choose materialize design as our first choice.

Challenges I ran into


Asynchronous running JS
Duplicated objects


Accomplishments that I'm proud of


Figure our the asynchronous problem to get rid of the duplicate objects.


What I learned


How to figure out git conflicts
How to play with node.js/MongoDB


What's next for waht_the_duck


Adding more characteristics to a course such as the type of answer. It could be standard or non-standard.
Separating the courses into the category of schools
Create user management session

",,https://github.com/bobmayuze/what_the_duck,,"Amazon Web Services - Best Use of AWS, Best Web Hack, Best Use of TripAdvisor API, Funniest Hack",Rensselaer Polytechnic Institute; Fordham University,"",bobmayuze,daniel_schnoll,gnawwaycon
Around Me!!!,http://hackrpi2016.devpost.com/submissions/62163-around-me,"Inspiration

Whenever my team-mates and I visited a new place, searching for a hangout spot or a restaurant became a task. The around me feature provided by Google used to come handy at such times. Since it was our first time at a Hackathon, we went ahead and implemented the same feature provided in our own way.

What it does

You just have to open the homepage and based on whether you are hungry or bored, Around Me!!! will suggest you 20 eateries or attractions closest to you. Moreover, you can read its review on TripAdvisor before deciding.

How we built it

We used the Google maps javascript api's and TripAdvisor's geo-location api to determine the user's location and then search for places around him/her. We used javascript, html, and css along with jquery, ajax, and json.

Challenges we ran into

Initially, we had a big time working with the api's since it was our first time. We also spent considerable amount of time on working with json because the json data was not available in the format that we needed. Once, we found a solution to it, we rushed through the rest of the development phase.

Accomplishments that we're proud of

We were able to determine, user's exact co-ordinates with just a click of the button and accordingly retrieve places around him/her. This feature which we had always been using in Google, we were able to implement it ourselves.

What we learned

We learnt a lot about working with API's along with javascript and json. We did not have much experience working on web technologies prior to working on this project, but by the time we reached the final phase, we believe we learnt a lot about api's and web technologies. This will act as motivation for us to try and develop more projects under this domain. Finally, we learnt that team effort is equally important along with the skillsets because as a team we were able to achieve a lot in a very short span of time. We look forward to attend more hackathons and stay in the learning flux.

What's next for Around Me!!!

In its current phase, Around Me!!! is just a webpage service but we plan to develop a mobile app which will be more portable and convenient to use for mobile devices.
",,https://github.com/dkataria/AroundMe-HackRPI2016,,"Best Project With .tech Domain, Amazon Web Services - Best Use of AWS, Best Web Hack, Best Use of TripAdvisor API, Best Food Related Hack, Best Domain Name from Domain.com, Most in the Public Interest, Most Technically Impressive",Rochester Institute of Technology,"",dkataria,sxi5805,prajesh93
FooBot,http://hackrpi2016.devpost.com/submissions/62207-foobot,"FooBot

A GroupMe bot to collaboratively discover your next food-adventure.

Inspiration

Everyone's hungry, everyone wants to eat together, but no decisions are made. This is a common problem around the world, but especially in college towns across America, where GroupMe is the communication method of choice for friends. FooBot works to solve this problem. 

What it does

FooBot quizzes each member of a group chat about their preferences, pickiness, budget and location in a conversational format. Given that information, and using a little bit of magic, it returns the most equidistant restaurant that everyone will enjoy. 

How we built it

Python scripts hosted on Amazon EC2, maintained and monitored with bash scripts.

Accomplishments that we're proud of

We were able to solve a common real-life problem. This can not be said by most, even at hackathons! This is not a tech demo, or a server built with Haskell, but instead a real finished product that will make our lives easier. 

What we learned

Server-sided automatic error handling was a chore, but we eventually accomplished it.  

What's next for FooBot

We hope to eventually expand to further chat platforms and offer suggestions for other services such as entertainment, hikes etc. In the future we could even build FooBot into a web-client where friends would not have to rely on chat services.
",,https://github.com/CharlieIO/Foo-Bot,,"Amazon Web Services - Best Use of AWS, Best Use of TripAdvisor API, Best Mobile Hack",Colgate University,"Dell XPS Laptop,Dell Monitor",frvannes16,CharlieIO
Pyxel,http://hackrpi2016.devpost.com/submissions/62220-pyxel,"CS3K

A rag-tag team of freshmen join together in their first ever Hack-a-thon!
Their limited knowledge and great personalities lead to a fine array of spaghetti but it works.
Our team name, CS3K, comes from the idea of adding 1000 three times, representing the level of our coursework experience - which is like none since we just learned classes literally earlier this week lol

So, as your resident freshmen dev-team, we present to you our game, ""Pyxel"".
",,https://github.com/leew15/CS1000s,,Best Video Game or Virtual Reality Hack,Rensselaer Polytechnic Institute,"",Edartle,hertacalvo,leew15
RedFlag,http://hackrpi2016.devpost.com/submissions/62241-redflag,"RedFlag

Hide or highlight social media posts that might be harassment.

What does it do?

Whenever you are on Twitter, the Chrome extension will load. Depending on the settings you choose, possibly harassing tweets will be hidden or highlighted. You will then be linked to our help page.

How is harassment detected?

First, we use sentiment analysis on each tweet to determine if it has a negative sentiment. Then, we scan the tweet for profanity, threats, and user mentions. Threats automatically flag the tweet for harassment. If there are no threats detected, the amount of profanity, the sentiment of the tweet, and any user mentions determine whether the tweet is harassment.

Where can I download this?

The app is available on the Chrome Web Store in the link below.
",,https://github.com/kburk1997/RedFlag,,"#HackHarassment, Best Project With .tech Domain, Best Solo Hack, Best Web Hack, Best Domain Name from Domain.com, Best Data Science Hack, Most in the Public Interest, Most Technically Impressive",Rensselaer Polytechnic Institute,"",kburkhardt
tripographics,http://hackrpi2016.devpost.com/submissions/62242-tripographics,"Inspiration

Wanted to make a trip planner

What it does

Shows you infographics based on your favorites

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for tripographics
",,https://github.com/nikhilnxvverma1/trip-planner,,"Best Web Hack, Best Use of TripAdvisor API, Most Polished Hack",Rochester institute of information technology,"",nikhilnxvverma1,VipulMehra
NecroManncer,http://hackrpi2016.devpost.com/submissions/62246-necromanncer,"PROJECT NECROMANCER

What is it? A soon-to-be fully-fledged mod for the rhythm-rogue game Crypt of the Necrodancer, featuring the vibrant likenesses and quirky personalities of the Team Fortress 2 crew, who find themselves trapped in the crypt due to a mysterious power...

Cool! How do I try it? First, you need Crypt of the Necrodancer installed on your system (it's available from Steam for $14.99 at full price). Then, go to the project site and download the mod through the link. Unzip the folder, then place it in the game's mods folder (steamapps/common/Crypt of the Necrodancer/mods). Finally, open the game, and activate the latest version of the mod through the in-game menu.

What's included so far? These are the dev notes as of the first version (v0.0.1):


Added skins for Miss Pauling (replaces Cadence)
Coming in v0.1: alpha cutscenes


I want to help! That'd be greatly appreciated! If you have experience in sprite sheets or digital illustration, please feel free to get in touch with me!
",,http://fortresscrypt.net,,"Best Solo Hack, Best Video Game or Virtual Reality Hack, Best Domain Name from Domain.com",Rochester Institute of Technology,"",LarkDiet
BeatMatrix,http://hackrpi2016.devpost.com/submissions/62260-beatmatrix,"Inspiration

The inspiration for BeatMatrix was that people today love music but have no true way to connect with their audio. And so, we created the app so that users can tap to the beat of their favorite songs. 

What it does

The application flows beats through based on the beat of the song given and the user must tap on the screen on the exact right moment, when the dot is on the line so that the user can gain points. Based on how well the user knows the song and the beats of the song, the user gets more and more points. 

How we built it

We used java to built both the back end and front end but with pretty liberal use of APIs. Our first order of business was to find a way to read music and analyze it. This we did with the JFuge API. Then we needed to find how to find beat drips and transfer that into visual dots. Then we built the back end to track the players keystrokes and playing game. 

Challenges we ran into

The biggest challenge was creating an algorithm to analyze the music and beat drops.
The back end design to run the music and dots side by side.

Accomplishments that we're proud of

We are happy that we can visualize a connection between music and user happiness; users can visually see their connection to music increase as they play on the application more and more. 

What we learned

We learned that the best ideas for on the application are best on the simplest needs; people want to score their connection to mainstream concepts, and BeatMatrix does that. 

What's next for BeatMatrix

We plan to incorporate more APIs that will the basic theme of beats in a more engaging game. We will also extend  the application to a mobile environment.
",,,,"Best Video Game or Virtual Reality Hack, Best Data Science Hack, Best High School Hack",West Windsor - Plainsboro High School South,"",sriv1999,nish_iyengar,sahaysanskar,chirukoiloth
fightmeirl,http://hackrpi2016.devpost.com/submissions/62272-fightmeirl,"Inspiration

I wanted to beat up Dan.

What it does

This is a fighting game in which you connect your phone to your computer across the web. Using your phone as a controller and your computer as a screen, you can move your character around the world, thrusting with your phone to punch other players, and screaming into it to power up your punches.

How we built it

With skill and finesse.

Challenges we ran into

JavaScript doesn't play nice with phone accelerometers and microphones. The HTML5 Canvas has some tricky syntax.

Accomplishments that we're proud of

We looked really stupid screaming at our phone to test it.

What we learned

How not to screw up.

What's next for fightmeirl

More functionality and gameplay elements.
",,https://github.com/omgimanerd/fightmeirl,,"Best Web Hack, Funniest Hack, Best Mobile Hack, Best Video Game or Virtual Reality Hack, Most Technically Impressive",Rochester Institute of Technology,"",omgimanerd
RobBot,http://hackrpi2016.devpost.com/submissions/62290-robbot,"Inspiration

How do you stop harassment in a community? Blocking users or limiting network access is not a permanent solution and often does not work because there is a way to get around it. The only way to stop harassment would be to hold those accountable for the comments that they post online. This is why we developed RobBot.

What it does

RobBot is a smart Twitter bot developed to fend off online harassment. It scans twitter feed in your area, looking for harassing tweets and calls people out on it. Which means if you post a harassing comment, you will receive a retweet from RobBot telling you that you made a harassing comment. The harassing comment and the user's information are stored in a database, to which the admin can do what they wish with the data.

How we built it

The front end was developed with HTML, CSS, and Bootstrap. The back end was developed with Javascript using Node.js, twit api, and twitter's api.

Challenges we ran into

Deployment of the website or web hosting was a big problem so we are deciding to demo on the local host.

Accomplishments that we're proud of

WE MADE A TWITTER BOT!

What we learned

JS, HTML, CSS, Bootstrap, Node.js

What's next for RobBot

A more intuitive harassment algorithm to be implemented.. Along with improvement in data analysis and additional functionalities. 
",,https://github.com/wliang6/Twitter-Bot-vs-Harassment/tree/master,,"#HackHarassment, Best Project With .tech Domain, Best Web Hack, Best Domain Name from Domain.com, Best Data Science Hack, Most in the Public Interest","Binghamton University, University at Buffalo","",aliang30,WinnieLiang,CrazyWonton
letsPlay,http://hackrpi2016.devpost.com/submissions/62302-letsplay,"Lets-play is a web app that we made to play traditionally single player games, as multiplayer games.
",,https://github.com/jasonac1994/lets-play,,"Best Web Hack, Best Mobile Hack, Best Video Game or Virtual Reality Hack, Best Domain Name from Domain.com, Most in the Public Interest","Suffolk County Community College, Farmingdale College","",Jasonac1994,jordanpowell1997,melanie32195
Know Thy Enemy,http://hackrpi2016.devpost.com/submissions/62312-know-thy-enemy,"Inspiration

Currently all the different platforms and websites have their own methods for dealing with harassment but don't communicate with other platforms to see if users with the same username are causing trouble.  Although not everyone with the same username on a different site is the same actual user, many users do reuse usernames between websites.

What it does

Our website allows for the creation and viewing of reports of harassment.  It also allows registered users to flag reports for admin review.  Users can delete their own reports and Admins are able to delete all reports.  

How we built it

html with php with a mysql database

Challenges we ran into

*Creating the specific functionality for admin users and having that be different from standard users.

*Running out of time before adding all the functionality that we had planned on having

Accomplishments that we're proud of

*Having a basic working website for reporting and viewing reports.

*Having some more advanced functionality such as allowing users to flag reports and being able to delete their own reports.

*Allowing admins to view flagged reports and take the appropriate action.

What we learned

*There's never enough time to accomplish all the things that you want to get accomplished.

*One of the partners had never really worked with php or mysql before so they had quite a steep learning curve.

What's next for Know Thy Enemy

Adding the ability to make API calls in order for other websites and games to have access to the database.
",,http://www.knowthyenemy.tech,,"#HackHarassment, Best Project With .tech Domain, Best Web Hack, Most Polished Hack, Most in the Public Interest, Most Technically Impressive","Rensselaer Polytechnic Institute, Cornell University","",kuprel,asy8
Shit You Hear At Hackathons,http://hackrpi2016.devpost.com/submissions/62328-shit-you-hear-at-hackathons,"Inspiration

We wanted to spend HackRPI (Tristan's 10th hackathon) having fun, teaching people, and enjoying while also hacking. We had an idea, then a few hours before the deadline Tristan said ""What if we made 'Shit You Hear at Hackathons .com' and that's just what we did.

What it does

People say crazy things, I've seen the on Facebook in Hackathon Hackers, and just heard around. Finally a place to share them, and vote on the craziest and funniest.

How we built it

We used Meteor, a full stack Javascript framework. Bootstrap. 

Accomplishments that we're proud of

Fixing dumb bugs. That's all I can say folks.

What we learned

Raymond learned how to use Meteor, the basics of web development, and everything to know about hackathons. Tristan had a great time at his 10th hackathon.

What's next for Shit You Hear At Hackathons

Full time website, with lots of crazy stuff!
",,http://shityouhearathackathons.com/,,"Best Project With .tech Domain, Best Web Hack, Funniest Hack, Most Technically Impressive","Marcellus High School, Syracuse University","",Tacoman3005,teckno101,zhenyechen
TrailMaps,http://hackrpi2016.devpost.com/submissions/62329-trailmaps,"Inspiration

Maps of public parks in our areas are almost non-existence, or lack detail

What it does

a modern approach to mapping hiking trails

How we built it

swift, firebase

Challenges we ran into

Buggy XCode

Accomplishments that we're proud of

finishing in a timely manner/new approach to backend with firebase

What we learned

Firebase

What's next for TrailMaps

Being able to search through ElasticSearch 
",https://www.youtube.com/watch?v=lALIz4yTCqM&feature=youtu.be,https://github.com/lachm/hackrpi-ios,,"Best Mobile Hack, Best High School Hack",Princeton High School,"",lincolnmroth,lachm
CentralParq,http://hackrpi2016.devpost.com/submissions/62335-centralparq,"CentralParq - Just park it.

Cars, helicopters, airplanes, tanks, toy cars, etc. 

Inspiration

Have you ever been in a big parking lot and you can't seem to find a spot? 
With CentralParq, you will always have the best spot available. No more wasting gas and time!
CentralParq can be used anywhere and highly customizable depending on their needs. 
Few applicable places include but not limited to schools, hospitals, malls, military bases, and airports.
Existing solutions such as having sensors on the ground or using satellite images have limits. 
Sensors are expensive to manage and satellite images can only be applied to spaces outside. 
CentralParq can not only be applied to underground parking lots, but also uses existing camerass, which reduces the cost significantly less. One sensor installation cost about $200 - $400. 

What it does

Using computer vision(camera), it detects the parking spot and notify the users if it's available for them.
It helps the parking lot staff to check availability of lots. 
With gathered data, the business owners can view their peak times and modify their strategy to improve their businesses accordingly. 

How we built it

Python + Computer Vision + manual labor

Challenges we ran into

This hack was very technically-challenging. We created the data set and labeled them manually, which took large chunk of our time. 
We tried to simulate the parking lot as much as we could. We had camera at an angle, few cars parked poorly, and tested different situations like the full lot, empty lot, and in between the two. 

Accomplishments that we're proud of

Currently CentralParq detects empty spot with 92% accuracy. It is highly adaptable to different spaces and situations. 

What we learned

Python + Computer Vision + how not to be an as*hole at parking. 

What's next for CentralParq

Accommodating parallel parking spaces in cities, reducing traffic.
Accommodating spots for people with disabilities. 
Marking your parking spot, so you don't ever lose your car, especially after long-term parking.
Notifying the user when they park like an as*hole and educate on how to park better. (Leads to educational pages, such as ""How to park in a parking lot - WikiHow"", ""Perpendicular parking made simple - Youtube"")
Putting things on Central-Parq.com 
There are so much more we could do! 
",,,,"Best Hardware Hack, Best Domain Name from Domain.com, Best Data Science Hack, Most in the Public Interest, Most Technically Impressive","SUNY Albany, SUNY Poly, SUNY Poly","",Ellieseoejung,amelius,Humpo
Yogurt.ai,http://hackrpi2016.devpost.com/submissions/62339-yogurt-ai,"Inspiration

Last winter break, I was staying on campus with my friends and had very little to eat. We ran out of declining balance and we didn't want to spend a lot of money on food because we wanted to save money for traveling back home during summer. We had to figure out a way to budget. Hence, the idea for this app. The reason it is called Yogurt.ai is because we had to live off on yogurt for 3 whole weeks. 

What it does

Using state of the art convex optimization technique, it calculates the maximum amount of food you can get from a restaurant with a given budget.

(Jk lol we used Knapsack algorithm)

How I built it

Our team of 4 built this using node.js, python, and an unhealthy amount of chips.

Challenges I ran into

Obtaining the optimal set of food item from the Knapsack algorithm + Un-uniform menu structure we have to scrape.

Accomplishments that I'm proud of

Overcome the above challenges and have a great logo. 

What I learned

(1) How to survive a Hackathon
(2) Work efficiently in team to output a product 

What's next for Yogurt.ai

(1) Expand the list of restaurants
(2) Include actual username when the bot greets the user
(3) Make the bot smarter
",,,,"Best Web Hack, Best Food Related Hack, Funniest Hack, Most in the Public Interest","Union College, NY","",Kashyapa
Joylent,http://hackrpi2016.devpost.com/submissions/62341-joylent,"Sometimes you can't be bothered to go get human interaction. Sometimes you just don't have friends. That's why Joylent is the perfect solution: convenient and efficient communication with real humans!

We decided Soylent was really funny and deserved a spoof. That's it. That's literally all it was.
",,https://alyssawang.github.io/joylent/index.html,,"Best Project With .tech Domain, Best Web Hack, Most Polished Hack, Best Food Related Hack, Funniest Hack, Most Technically Impressive","Williams College, Hofstra University, Rensselaer Polytechnic Institute","",alyssacwang,jlyon1,barbara_xo
Sentiment Analysis Of Restaurant Reviews,http://hackrpi2016.devpost.com/submissions/62364-sentiment-analysis-of-restaurant-reviews,"Inspiration

Many local small business owners run out of business because of lack of efficient way of analyzing their overall customer feed till date.In order to secure their investments and understand the overall customer satisfaction we came up with the idea of analyzing the various user reviews and provide a comprehensive reporting application which will help them to take significant decisions. 

What it does

It considers reviews from various customers and builds a visualized model by highlighting the customer sentiments

How we built it

We used machine learning supervised models like Decision tree,Naive Bayes to develop and classify the various customer reviews.

Challenges we ran into

Finding training and test datasets for training the model,Compatibility between data and model used for classification,finding out the best model for sentiment analysis,

Accomplishments that we're proud of

We were able to develop a prototype that generates visual data based on customer reviews and categorize them into sentiments

What we learned

Teamwork,Hard-work,Good planning,Analysis,Better debugging skills 

What's next for Sentiment Analysis Of Restaurants Data

Providing better suggestion to customers based on sub categories like ambiance, authentic , hygiene
Improve the depth of categorization from level 2 to level 5(excellent,good,average,poor,terrible,) 
",,https://github.com/Nir0303/SentimentAnalysisOfRestaurantsData,,"Best Use of TripAdvisor API, Best Data Science Hack, Most in the Public Interest",Suny Polytechnic Institute of Technology,"",Nir0303,GhattiM,rohitkhambad1
DriveSpoke,http://hackrpi2016.devpost.com/submissions/62367-drivespoke,"drivespoke
",,https://github.com/JasonKraft/drivespoke,,"Best Web Hack, Most Polished Hack, Best Mobile Hack, Best Domain Name from Domain.com, Most in the Public Interest, Most Technically Impressive",Rensselaer Polytechnic Institute,"",uyenuong,LimitedWard,Rikusaber,lrrational
ur.it,http://hackrpi2016.devpost.com/submissions/62383-ur-it,"# ur.it

Play tag with anyone in the world everywhere in the world. If you have an internet connection, an iPhone, and a server sitting somewhere, you can play tag with your friends. 

We used Flask with Python 3 to handle the back end stuff. The iPhone requests this server which returns information in the form of a JSON which is then drawn on the screen using the Google Maps API and Swift. 
",,https://github.com/Moovlin/BTAGR,,"Best Mobile Hack, Best Video Game or Virtual Reality Hack","RIT, Delran High School","",Moovlin,jspann44,jackappdevinc,hank_sheehan
sendd,http://hackrpi2016.devpost.com/submissions/62385-sendd,"sendd

sendd allows for direct connections between clients to transfer files. It uses peer.js to assign each an ID, and connect them directly without the need for a file hosting server.

sendd also ships with peer-server, meaning it's completely separate from the peer.js main servers, and doesn't require an API key.

To install (assuming nodejs and npm are installed):
git clone https://github.com/Josh1147582/sendd
cd sendd
npm install
npm start

Or build and run the docker container at:
https://github.com/Josh1147582/sendd-docker

Usage:

Connect to the server (by default) at localhost:3000. Port 9000 must also be open for the peer server to communicate with clients.
",,https://github.com/Josh1147582/sendd,,"Best Solo Hack, Best Web Hack",Rochester Institute of Technology,"",jhb2345
Dine & Dash,http://hackrpi2016.devpost.com/submissions/62388-dine-dash,"Inspiration

When we got accepted to SUNY Plattsburgh we were elated to start our adult life in a whole new town and meet tons of new people. Being new to the town, we had no idea what the city had to offer or who would even be interested in participating in certain events seeing as no one from our previous school decided to attend this event. On the way down to the Hackathon we learned that we would have the opportunity to use the tripadvisor API and we instantly thought back to how useful something like this would have been if we knew about it when we came to school. It would have been more useful if we could find others who were interested in going to the places with us so we could make new friends. What we wanted to make was something like Tinder but more for finding friends with similar interests.

What it does

Our application allows users to sign up and set a preference for what they would to do. The application then presents them with a list of venues where they could do said activity. Upon selection, they will be presented with other users who also want to do said activity at similar places. The user will have the opportunity to 'dine' with said other user or 'dash' away from them. The application will then link the user with other users who wanted to 'dine' with them as well.

How we built it

TripAdvisor API, Rails, Bootstrap, SQLite, and a little magic.

Challenges we ran into

The TripAdvisor API didn't have any Ruby client so we had to figure out how to integrate it with our app with our own code which took  a considerable amount of time. Also, most of us were learning to use rails for the first time.

Accomplishments that we're proud of

We believe we came up with a truly unique idea. Also the sign in component was difficult to implement and we were happy that we were able to get it running.

What we learned

Danny learned how to apply classes to to rails. 
Justin learned how to integrate rails and SQLite.
We learned when the going gets rough the tough gets going .

What's next for Dine & Dash

We would love to add functionality for group activities like a pickup soccer game or to add data analytics to the database to better match users together.
",,https://github.com/prithajnath/dine_and_dash,,"Best Project With .tech Domain, Best Web Hack, Best Use of TripAdvisor API, Best Mobile Hack",SUNY Plattsburgh,"",dannyfan,spidertothefly127,JustinG721
UniClick,http://hackrpi2016.devpost.com/submissions/62429-uniclick,"Inspiration

Anyone who has ever given a presentation has appreciated the benefits of a clicker to seamlessly switch between slides. The added functionality of a touchpad and keyboard lets you remotely access your computer to play videos or search. The price of the said clicker, though, means that you're just going to have to stick to standing in front of your screen pressing the spacebar.

What it does

UniClick is web app that permits the user to remotely control a computer from a smartphone. UniClick acts just like a professional clicker: you have full control over the mouse and keyboard. 

On top of this, UniClick also enables interaction with the audience. The presenter can create questionnaires that will be sent during the presentation. Audience members using the web app can then respond to yes/no, multiple choice  or short-answer questions which will be fed back to the presenter's phone. These types of interactions are proven to provide a more accurate and complete overview of student understanding for teachers.

UniClick represents a unification of both clicker and survey functionality in one app.

How we built it

UniClick is built using Meteor for the front-end web interface, CouchBase for the database, DropWizard for the backend and Android Studio for the Android app. Java.Robot enables the remote-control functionality.

Challenges we ran into

Enabling the remote-connection from a phone took a lot of time and caused many headaches. Creating the app so that it could send the appropriate commands was also challenging. Connectivity between two servers was also a problem.

Accomplishments that we're proud of

The app works and can control a computer remotely. The questionnaire functionality is also working.

What we learned

Such a project is quite difficult but is possible!

What's next for UniClick

A beta release should be possible soon. An iTunes app will be easy to develop as well.
",,https://github.com/raulamit/hackRPI.git,,"","College Lionel-Groulx, Northeastern University, WPI","",jean-luc959,mat302,raulamit,TheVillageIdiot2
Git Pulled VR,http://hackrpi2016.devpost.com/submissions/62447-git-pulled-vr,"Inspiration

The opportunity of being able to use the Rift and leap motion provides our team enough reason to be inspired to make an awesome game. VR has always been our topic of interest. We see VR as being the next big thing in the upcoming years and having the chance to develop skills using both pieces of hardware drives us to continue to learn more about the tools.

What it does

Git Pulled VR is a virtual reality experience that introduces a new type of mechanic, player movement and grappling capabilities. With the combined powers of the Oculus Rift and Leap Motion, our game brings out the full experience of clinging from wall to wall and swinging across multitudes of platforms. With the added virtual obstacle, the player can have fun grappling their way to the finish line, allowing them to experience the full virtual experience.

How we built it

In order to create Git Pulled VR we relied heavily on making the mechanics functional. Our game emphasizes on our complex c# scripts that are used to make the movement and grapple possible.  All our assets we made entirely in Unity3D, and our course was made as the playground for the player to enjoy the use of the grapple.

Challenges we ran into

Time is always an issue when it comes to this kind of project. Most of our time was based on re-creating physics so our player can have a real grappling experience.

Accomplishments that we're proud of

We created a unique feeling that can only be experienced in VR. We were able to sync our controller into Unity, which controlled movement. 

What we learned

We learned a lot about Unity, and how its objects act relative to each other.

What's next for Git Pulled VR

We plan on cleaning up the physics, making the controls feel tighter and more slick. We also plan on adding more levels and potentially a combat system. We may also try to add custom models for objects instead of the pre-built ones we are currently using.
",,https://github.com/davshus/hackRPI-Fall-2016,,"Best Hardware Hack, Best Video Game or Virtual Reality Hack","Rutgers University New Brunswick, Millburn Highschool","Alienware Laptop,Oculus Rift,Leap Motion",MnMaxon,ericdleon,chiayiliang327
GetYourSearchOn,http://hackrpi2016.devpost.com/submissions/62492-getyoursearchon,"Inspiration

Mike - During my business writing class one day, the class was asked to find business consultants specific to to the field you were researching. We searched and search on google, but locating an exact individual was to hard to find. 

What it does

This program is a content based search engine that allows the user to choose related articles and the algorithm learns from that and re searches to give the user a more exact answer.

How we built it

The front end is build with bootstrap, html, css and javascript.
the backend is built with python and Flask

Challenges we ran into

The time the algorithm takes to run is O(n^2) and we ran out of time to refine it down to O(n)
Connecting form expressions from the front end to the backend
Figuring out ways to cash
Some inputed text the program does not like

Accomplishments that we're proud of

Getting the program to run
We gained a lot of experience with Flask

What we learned

We learned more about connecting front end and backend components together in order to pass live data
We learned more about requests and templates

What's next for GetYourSearchOn

Refining the running time of the algorithm
Testing to make sure it can compute all inputed text
",,,,"Best Project With .tech Domain, Amazon Web Services - Best Use of AWS, Best Web Hack, Most in the Public Interest, Most Technically Impressive",Western New England University,"",Hawzie197,ynot269
AlexaBlackJack,http://hackrpi2016.devpost.com/submissions/62494-alexablackjack,"Inspiration

Our initial motivation and inspiration to begin this project stemmed from our love for table card games. We'd spend nights playing blackjack and poker and realized how time-consuming it is to deal and shuffle cards. Also, when we played blackjack, one of us would always have to be dealer and that role was not very fun. We saw the Amazon Echo being used for other games, and realized we'd be able to use it for the card games that we know and love. During this hackathon, we built AlexaBlackJack, a blackjack card game which allows people to connect to an online game (set up by Alexa) from their phones. 

What it does

AlexaBlackJack allows multiple users to connect to an online game of blackjack from their phones (hosted by Amazon Web Services) by opening a browser and going to alexablackjack.tech and joining the room that Alexa directs them to. Once all of the players join, Alexa asks for bets (similar to a real blackjack table) and then each player is dealt two cards. The cards are seen on the player's device, along with the dealer's cards and the chip count for the respective player. Alexa goes around, asking for player commands (hit or stand). Once a player busts or is satisfied with their card total, Alexa announces the cards she drew and distributes any winnings earned by the players. All games are stored on the cloud using AWS S3 so the functionality to resume games can be built in the future.

How we built it

Pain and suffering and a little bit elbow grease.

We started by creating blackjack using the Deckofcards API in node.js. At the same time, another one of our teammates worked on setting up Amazon Web Services to create the Alexa skill, host the website, and store the games on the cloud. We also had a member of our team work on the website design. Once we were done with our respective pieces, we spent a majority of the time integrating the three parts together. We also spent a great amount of time debugging.

Challenges we ran into

One major problem we ran into while developing the game logic was dealing with how the ace is added to hands. We found a workaround where we automatically add the ace as an 11 and then subtract 10 for every ace when we are over 21 in our card value. In addition, the way the cards were dealt to the dealer became an issue as the dealer was not receiving enough cards, even when she was under 17 in card value. Some graphical issues were also encountered, such as having older cards display for a new hand or having too many cards added to the current hand. Keeping track of the game state when three different parts of the game require concurrent versions was difficult to handle. 

Accomplishments that we're proud of

Well I mean one of our members recently was accepted into medical school so he was proud of that. Another member was proud that he made some really bad puns. Our last team member was proud actually sleeping at a hackathon for once, especially after having taken shots of monster energy drink in our provided toothpick holders.

In terms of the project, we were most proud of being able to integrate these various services & functionalities. We were also proud of being able to overcome the bugs that we encountered. 

What we learned

Although most of the knowledge regarding the programming languages was already understood, we definitely learned how to integrate these services together. We learned about team synergy and fostered a sense of thought management. We also incorporated cloud computing and channeled our creativity to provide the best end-user interface. Finally, we thoroughly investigated business buzzwords to best enable synergistic management solutions within our strategized efforts. 

What's next for AlexaBlackJack

One word: Poker.
",https://youtu.be/AKHqSAMUYTc,http://alexablackjack.tech/,,"Best Project With .tech Domain, Amazon Web Services - Best Use of AWS, Best Web Hack, Most Polished Hack, Best Hardware Hack, Best Mobile Hack, Best Video Game or Virtual Reality Hack, Most Technically Impressive",SUNY Binghamton,Amazon Echo,narwhalkushal,ckane2,nkatz565
PleasePickAPlace,http://hackrpi2016.devpost.com/submissions/62515-pleasepickaplace,"Please Pick A Place

Inspiration

People can never seem to decide where to go, because of dietary restrictions, distance, or simply just don't want to eat a certain type of food. Our idea is to simplify choosing a place to eat by use of a voting system, where one can sort based 

What it does

The user joins or creates a group with other people.
User gets a list of nearby restaurants based on geolocation, and can choose a top 3 to vote via the Borda voting system. The person who created the group can stop the vote and parse the data, returning the most popular restaurant nearby.

How we built it

A flask backend with an android frontend were the essentials of this project. 
MySQL was used as the database to store register/login/groups.
TripAdvisor api was used to get nearby restaurant data.

Challenges we ran into

The biggest challenge we faced was the communication of the frontend and backend. MySQL with normalization was something we had to learn while doing this project.

What we learned

How to create an api service in flask-python.
How to create an android app that can communicate with a server.
MySQL normalization.

What's next

Fully fleshing it out so we ourselves can use it
",,https://github.com/ServePeak/hackrpif16,,"Best Use of TripAdvisor API, Best Food Related Hack, Best Mobile Hack","RPI, NYU","",Chupalika,aleung013,ServePeak,TiaraIsTan
octotramp,http://hackrpi2016.devpost.com/submissions/62516-octotramp,"Octotramp

A combination of Octocat and trampolines, this project aims to engage users with a challenging and visually stimulating arcade game. Added to the fun is a sense of competition inspired by the in-game leaderboard. Many Git-inspired puns also add to a good time.

Implementation

The front-end of this web-based app is designed primarily in Processing.js. It uses the library to implement 2D side scrolling arcade action as well as game physics. The front-end uses Ajax to communicate with the Python backend. The Python backend is running Python 2.7 and a BaseHTTPServer. It stores high scores on the server using Python's builtin pickle module. When Ajax sends a request, the Python server sends back a list of the top ten scores separated by \n.

Hosting

The back-end and front-end are both hosted using an E2 instance of AWS running Windows server 2012. The domain is hosted on DotTech domains.

Running the front-end locally

Some browsers have local CORS restrictions, so you should run a server locally
using the command python -m SimpleHTTPServer in the root directory of this
project. Then, open your webbrowser to http://localhost:8000.
",,http://octotramp.tech/,,"Best Project With .tech Domain, Amazon Web Services - Best Use of AWS, Best Web Hack, Funniest Hack",Rochester Institute of Technology,"",ejmsoftware,chrisbaudouinjr,mrm8391
Audiolla,http://hackrpi2016.devpost.com/submissions/62518-audiolla,"Inspiration

One common hobby among the four of us is music. As none of us can play music by ear, this game was built to help people develop this skill. 

What it does

The user will be given a set of randomly ordered notes and will be required to place them correctly on the piano keyboard. This is to help train the user's ear to identify musical notes.

How we built it

We used HTML and CSS for the front-end and JavaScript for the back-end.
We also used the jQuery framework. For the musical note sounds, we used GarageBand

Challenges we ran into

Some of the struggles we ran into included the verification of the user's inputs. There were also many front-end difficulties, such as positioning. Obtaining quality media files for the notes was a problem as well. Git was relatively new to most of us, so when pushing and pulling, we had to deal with multiple merge conflicts. 

Accomplishments that we're proud of

We were proud that we pushed some of our group member out of their technical skill comfort. We ended up with an aesthetically pleasing product.

What we learned

We developed our JavaScript, HTML, and CSS skills. We also learned how to better deal with Git merge conflicts.

What's next for Audiolla

Some additional features we plan to incorporate are having different modes, such as identifying major and minor chords. We also wanted to make the game more difficult as it goes on by adding more octaves, and allowing the user to ""level up"" and gain more points. 
",,https://github.com/ahalyasanjiv/Ear-Training-App,,"Best Web Hack, Best Video Game or Virtual Reality Hack","The City College of New York, Stony Brook University","",mendywu,jchen014,ahalyasanjiv,greenteas
emote.io,http://hackrpi2016.devpost.com/submissions/62522-emote-io,"emote.io

A facial recognition service to help autistic people better recognize emotions
",,https://github.com/rickrizzo/emote.io,,"Best Media Hack, Best Web Hack, Best Data Science Hack, Most in the Public Interest, Most Technically Impressive",Rensselaer Polytechnic Institute,Alienware X51 Desktop,rickrizzo,rrotering,candicepoon,paradc2
Roadies,http://hackrpi2016.devpost.com/submissions/62523-roadies,"Inspiration

A few days ago I was planning a road trip with my roommates for spring break and we weren't sure where we could stop on they way to our destination.

What it does

It uses Google Maps to display a route when the user enters a starting and ending location. Then it plots markers along the route of the nearest hotels, attractions, and restaurants. These all have descriptions provided by the TripAdvisor API.

How I built it

I integrated Google Maps first with an autocomplete function for the user to enter their starting and ending points. THe Google Map assumes the user is driving. Then I found a JavaScript program on GitHub that aids in finding coordinates along a route. I coded it to have one of each type of location (hotels, attractions, and restaurants) every 10 kilometers. I took those coordinates and plugged them into the TripAdvisor to get the locations around each coordinate. Then I plotted those locations on the map and configured the information windows for the markers.

Challenges I ran into

Gathering the coordinates along the path, rather than just the first and last locations. Changing the markers on the map from the traditional Google markers.

Accomplishments that I'm proud of

Getting the points along the route functioning.

What I learned

I learned how to use the Google API and tie in the TripAdvisor API to create a custom map.

What's next for Roadies

User selection for the type of locations they want to see (restaurants, hotels, or attractions).
",,https://github.com/kaylacinnamon/Roadies,,"",Rensselaer Polytechnic Institute,"",KaylaCinnamon
SoylentTracker,http://hackrpi2016.devpost.com/submissions/62527-soylenttracker,"Inspiration

I love Soylent

What it does

This app tracks the amount of Soylent you drink daily. In the future when everyone eats Soylent and only Soylent, my app will keep everyone fit and healthy.

How I built it

With Soylent and SoylentOS, and my friends

Challenges I ran into

Not enough Soylent

Accomplishments that I'm proud of

I drinked 4 Soylent bottles and 3 Coffiest bottles

What I learned

Soylent is the best food

What's next for SoylentTracker

Graphs, more Soylents product support, social features
",,https://github.com/anhmiuhv/SoylentTracker,,Best Mobile Hack,Worcester Polytechnique Institute,Pebble Round,anhmiuhv,kddoan
Root Jacker,http://hackrpi2016.devpost.com/submissions/62528-root-jacker,"Inspiration

I've been interested in so-called ""Juice Jackers"" for a long time, and I felt like this was the perfect opportunity for me to work on it. It started as something to just promote common-sense and education among consumers, but branched into an automatic android-rooting machine!

What it does

Based on the android ""dirty c0w"" proof of concept, it automatically detects the correct chipset of the device, delivers, and executes the payload, allowing arbitrary code execution by a privileged user (uid of 0) in a read-only disk partition. 

What's next for Root Jacker

Soon, automatically install superSU and possibly remount the /system/  partition to allow normal writing.
",,,,"Best Solo Hack, Best Hardware Hack, Watch Dogs® 2 Best Device Privacy Hack",Rensselaer Polytechnic Institute,"Intel Edison,Particle Spark Core,Particle Photon,Amazon Fire Phone",allyorbase
connect-four,http://hackrpi2016.devpost.com/submissions/62532-connect-four,"Inspiration
We wanted to create some kind of artificial intelligence.  After playing around with several ideas, we decided we wanted to do some kind of fun game that could be won by logical constructs.  After thinking through a few examples, we landed on connect-four! It's a fun project we would both be interested in.

What it does
When you run main.py, it will ask you how many players are playing and their names.  To make them AI, name them 'AI 1', 'AI 2', etc.  Then it goes turn by turn filling in pieces like in the real game until someone wins! See if that will be you!

How we built it
Lindsay focused mostly on the underlying logic of the AI while Greg made the front-end and graphics! We talked about what choosing the best column to put a piece into would depend on and what we wanted it to look like, then got to work! Running into problems and integration we conferred to find the best solution.

Challenges we ran into
At first, we had our 2-D arrays organized in different ways, so for one (0,0) was in the top left and for the other in the bottom left.  After talking about what would be the smoothest end option, we decided to just do bottom left and go column then row.  Along the way we would realize different optimizations or returns that would make the code run much better and then have to go back and change those things.

Accomplishments that we're proud of

The graphics look awesome, and it's a functional game against a strategic AI and any other player! The AI checks which lengths of pieces already exist and if a line of four can be created.  Everything is color-coded and smooth.

What we learned
We learned how to work together, and got more practice working efficiently under a time limit.  We had great communication and got practice with python graphics.

What's next for connect-four
Right now the AI finds the best place to put a piece one move at a time.  However, right now it can't see past one move, so in helping itself get a longer line it may set the other player up for a win.  Multi turn strategy implementation is next.  We are also hoping to create online multiplayer, and take connect-four to the web.  These things are very doable, and we're excited for the future
",,https://github.com/lindzad/connect-four,,"Best Media Hack, Most Polished Hack, Funniest Hack, Best Video Game or Virtual Reality Hack, Most in the Public Interest, Most Technically Impressive",Rensselaer Polytechnic Institute,"",lindzad,cowang4
Connect 4i,http://hackrpi2016.devpost.com/submissions/62533-connect-4i,"Inspiration

We're really bad at Connect Four.

What it does

It plays Connect Four using eight randomly generated neural networks and applies a genetic algorithm by cross breeding the best players in each generation to produce the most ""skilled"" player.

How we built it

Connect 4i was built using solely python. The only dependencies used is the numpy library for mathematical computation. Each neural network corresponds to a flattened version of the state of the Connect Four board and seven outputs that correspond to the columns. The eight players in each generation were put into a tournament style competition where the top two winners in the bracket were crossbred and mutated to create the next generation of ""improved"" players. 

Challenges we ran into

We didn't have the processing power needed to train the model enough to create an expert player within 24 hours. We were limited to using MacBook Airs and Amazon Web Services to host the training.

Accomplishments that we're proud of

It probably works. We're still training it as we are writing this.

What we learned

We learned how to create simple neural networks and apply genetic algorithms to optimize the neural networks. 

What's next for Connect 4i

In the future, we can improve the genetic algorithm that would produce better bots as well as create more robust neural networks with more processing power.
",,https://www.github.com/pooneetthaper/Connect4I,,"Amazon Web Services - Best Use of AWS, Best Video Game or Virtual Reality Hack, Best Data Science Hack, Most Technically Impressive",City College of New York,"",jamesw8,pooneetthaper,thisisvinny
Bytes,http://hackrpi2016.devpost.com/submissions/62535-bytes,"Inspiration

""I never actually know if I'm getting a good deal anymore...""

While enjoying some free pizza, we began to discuss the struggles of being broke students in New York City. 

""The food is good, but it's also really expensive.""
""How much is too much for good food?""
""Bad food is cheap food and that's all that matters."" 

There are countless websites to check out food in your area, but they're all missing a critical element: a comparison with other local restaurants to determine if the food is a good value. 

What it does

Bytes compares the ratings and cost of a restaurant to other restaurants around you to help you get the best food for your money. Bytes, taking into account cost/rating ratio of local restaurants,  calculates a score and assigns a letter grade determining the quality of the deal. The higher the score, the better the deal!

How we built it

Dependencies (user must install these libraries before using Bytes): Requests, BeautifulSoup, NumPy, SciPy, GeoPy

Bytes is written in Python, using the TripAdvisor and Yelp APIs. GeoPy was used to get location; its ability to easily acquire latitude and longitude coordinates worked well with TripAdvisor's map request. From there, the TripAdvisor API generates a list of restaurants within the specified distance feeds their cost and rating into SciPy, which calculates a linear regression based on this data. From there, the restaurants are rated based on their actual position either above or below the regression line; above meaning a better than average deal, and below meaning worse than average. NumPy is used to simplify some of the mathematical work behind this. The data is returned with the name of the restaurant, the score, and the letter grade. The Yelp API is used to relevant information factoring into our formula and search results. Information not accessible through the Yelp API was obtained through web scraping using the requests and beautifulsoup libraries. It allows for searching through keywords, with flexibility for a smoother user experience. The front end was written mostly in HTML. JavaScript and Flask was used to integrate front end (mostly user input) with the back end. Bootstrap was used for a sleek interface and compatibility with mobile devices. 

Challenges we ran into

Making the front end was challenging because none of us actually knew how to do it or had any real experience with that. The greatest challenge by far has been using Flask to tie the front and back ends together, with the largest obstacle being getting user input into the back end. 

Accomplishments that we're proud of

The front end came out very nicely considering our lack of previous experience. At present, Bytes is extensible (to hotels, attractions, and other things under the TripAdvisor and Yelp APIs), and it is good at error handling. Being able to learn new APIs quickly is a skill we gladly continue to improve upon. We are also proud of the idea we used for rating the restaurants: it makes sense, is efficient, and is something other than coding that we came up with. 

What we learned

We learned how to use HTML and JavaScript, how to use a number of APIs and libraries to obtain and process data, and we learned a bit about how Flask works to tie the front and back ends together. 

What's next for Bytes

Bytes, in its current state, works very efficiently for finding local deals on food. However, this behavior could easily be extended to other areas such as hotels, attractions, and other things. Adding other features such as displaying menus, having user accounts to allow users to save favorites and view eating history, share recommendations with friends, etc. Bytes could also (in a non-evil way) collect data about its users, using this information to improve user experience and perhaps even local food options. Most importantly, cleaning up the integration between the front and back ends using Flask would be great (as in do it right this time). 
",,https://github.com/AbirHassan/RayofHype/,,"Best Web Hack, Best Use of TripAdvisor API, Most Polished Hack, Best Food Related Hack, Best Data Science Hack, Most in the Public Interest, Most Technically Impressive",New York University,"",Danny_Wilkins,parinakay,ash521
RestAWant,http://hackrpi2016.devpost.com/submissions/62536-restawant,"HACKRPI-RandomRestaurantFinder

An iPhone app that uses yelp's api to find random restaurants around you if you just can't choose what to eat! 
",,https://github.com/ksheikMav/HACKRPI-RandomRestaurantFinder,,"Best Food Related Hack, Best Mobile Hack",RPI,"",RyanSheik,MarcosBanchik,jko0531
Remote ECG Heart Monitor,http://hackrpi2016.devpost.com/submissions/62538-remote-ecg-heart-monitor,"Inspiration

Health care can be expensive and time-costly. The new technology of sensors and electronics makes remote access to healthcare data possible. Remote access of healthcare data can save a lot of money and time by its convenience and efficiency. Remote ECG is a good example.

What it does

This is a hardware based hacking. Three ECG electrodes are connected to MSP430 microcontroller and stick on left arm, right arm, and right leg of the user. The microcontroller samples the signal gathered from ECG electrodes and send it to PC through UART in a live stream. The PC receives the data and and upload it to the cloud. The patient's family or doctor is then able to access the ECG data remotely and monitor the user's heart health.

How we built it

The electrode on the leg is connected to the Ground. The difference of voltage between left arm electrode and right arm electrode is calculated as the ECG result. We use Energia to program MSP430 for analog data sampling and live plotting sampled data stream on the screen. We use a C program to save the data to a csv file and upload it to Plot.ly for remote access and figure plotting.

Challenges we ran into

The ECG electrode voltage is very weak. We tried different circuits to amplify it. Although the final result is still noisy, the trace of the ECG data is visible. The different voltage between the arms is significant.

Accomplishments that we're proud of

We show a possible path for remote access and sensor reading for healthcare data like ECG.

What we learned

MSP430 coding, data processing, UART reading and writing

What's next for Remote ECG Heart Monitor

Filter out noise for clearer trace
",,,,"Best Hardware Hack, Funniest Hack, Best Data Science Hack, Most in the Public Interest, Most Technically Impressive",Binghamton University,"",dmu1,dm257
NFL Game Predictor,http://hackrpi2016.devpost.com/submissions/62539-nfl-game-predictor,"Inspiration

A love of machine learning and the NFL

What it does

Predicts the winner of an NFL game

How we built it

Challenges we ran into

parsing and tuning

Accomplishments that we're proud of

A working machine learning program

What we learned

What's next for NFL Game Predictor

Player stats
",,https://github.com/Ewynne/NFLGamePredictor.git,,Best Data Science Hack,"Purdue University, RPI","",Ewynne
Business_Card_Indexer,http://hackrpi2016.devpost.com/submissions/62543-business_card_indexer,"Make corporate social interactions a tad easier.

Stores business cards electronically and allows them to be searched

Android Studio

None of us had ever touched android dev before

We managed to learn Android development in less than 24 hours

Android studio, sqlite, OCR

Proper search function, refinement of OCR
",,https://github.com/harrisonthu/BusinessCardsIndexer,,Best Mobile Hack,Rochester Institute of Technology,"",jinxy,rxl7906,josephville,harrisonthu
VRocabulary+,http://hackrpi2016.devpost.com/submissions/62544-vrocabulary,"Inspiration

Davis and I are High Schoolers that are in the same Spanish class. We have to learn packets new words every month.

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for VRocabulary+
",,,,Best Video Game or Virtual Reality Hack,Needham High School,Samsung Gear VR,shaash
largefishing.net,http://hackrpi2016.devpost.com/submissions/62546-largefishing-net,"Just a quick domain name grab
",,,,Best Domain Name from Domain.com,Binghamton University,"",narwhalkushal
Cube Encryption,http://hackrpi2016.devpost.com/submissions/62547-cube-encryption,"Inspiration

We were running through old Java code and found an old encryption algorithm which we wanted to fix into a relatively secure one. It was originally based on backwards hexadecimal with a square rotation.

What it does

Now, it rearranges your data into a three dimensional cube (with the extra gaps filled in with random non-hex characters). Then, the cube is scrambled with a encryption key, similar to a rubik's cube.

How we built it

We used a Rubik's cube to visualize the data manipulation of three dimensional arrays. The code was written in Java.

Challenges we ran into

Three dimensional arrays proved to be difficult to visualize and manipulate.

Accomplishments that we're proud of

A functional, scale-able encryption program.

What we learned

Though it can be fun to create new encryption methods, preexisting data encryption such as AES-256 is extremely more secure. 

What's next for Cube Encryption

Four-dimensional implementation with more advanced mutation algorithms.
",,https://github.com/jkim99/CubeEncryption,,"Best Data Science Hack, Watch Dogs® 2 Best Device Privacy Hack, Most in the Public Interest, Best High School Hack, Most Technically Impressive",Andover High School,"",onemec,jonathanskim
